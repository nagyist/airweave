{
  "openapi": "3.1.0",
  "info": {
    "title": "Airweave",
    "version": "0.1.0",
    "description": "\n\n## API Groups\nThis API spec only includes the following API groups:\n- **Sources**: API endpoints for discovering available data source connectors and their configuration requirements\n- **Collections**: API endpoints for managing collections - logical groups of data sources that provide unified search capabilities\n- **Source Connections**: API endpoints for managing live connections to data sources. Source connections are the actual configured instances that Airweave uses to sync data from your apps and databases, transforming it into searchable, structured information within collections\n- **White Labels**: API endpoints for managing custom OAuth2 integrations with your own branding and credentials\n"
  },
  "paths": {
    "/sources/detail/{short_name}": {
      "get": {
        "tags": [
          "sources"
        ],
        "summary": "Read Source",
        "description": "Get detailed information about a specific data source connector.",
        "operationId": "read_source_sources_detail__short_name__get",
        "parameters": [
          {
            "name": "short_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Technical identifier of the source type (e.g., 'github', 'stripe', 'slack')",
              "title": "Short Name"
            },
            "description": "Technical identifier of the source type (e.g., 'github', 'stripe', 'slack')"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                },
                "examples": {
                  "github_source": {
                    "summary": "Source details with authentication and configuration schemas",
                    "value": {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "name": "GitHub",
                      "description": "Connect to GitHub repositories for code, issues, pull requests, and documentation",
                      "auth_type": "config_class",
                      "auth_config_class": "GitHubAuthConfig",
                      "config_class": "GitHubConfig",
                      "short_name": "github",
                      "class_name": "GitHubSource",
                      "output_entity_definition_ids": [
                        "def12345-6789-abcd-ef01-234567890abc",
                        "def67890-abcd-ef01-2345-67890abcdef1"
                      ],
                      "labels": [
                        "code"
                      ],
                      "created_at": "2024-01-01T00:00:00Z",
                      "modified_at": "2024-01-01T00:00:00Z",
                      "auth_fields": {
                        "fields": [
                          {
                            "name": "personal_access_token",
                            "title": "Personal Access Token",
                            "description": "GitHub Personal Access Token with repository read permissions",
                            "type": "string",
                            "secret": true
                          },
                          {
                            "name": "repo_name",
                            "title": "Repository Name",
                            "description": "Full repository name in format 'owner/repo'",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/list": {
      "get": {
        "tags": [
          "sources"
        ],
        "summary": "Read Sources",
        "description": "List all available data source connectors.\n\n<br/><br/>\nReturns the complete catalog of source types that Airweave can connect to.",
        "operationId": "read_sources_sources_list_get",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  },
                  "title": "Response Read Sources Sources List Get"
                },
                "examples": {
                  "available_sources": {
                    "summary": "List of all available data source connectors",
                    "value": [
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "GitHub",
                        "description": "Connect to GitHub repositories for code, issues, pull requests, and documentation",
                        "auth_type": "config_class",
                        "auth_config_class": "GitHubAuthConfig",
                        "config_class": "GitHubConfig",
                        "short_name": "github",
                        "class_name": "GitHubSource",
                        "output_entity_definition_ids": [
                          "def12345-6789-abcd-ef01-234567890abc",
                          "def67890-abcd-ef01-2345-67890abcdef1"
                        ],
                        "labels": [
                          "code"
                        ],
                        "created_at": "2024-01-01T00:00:00Z",
                        "modified_at": "2024-01-01T00:00:00Z",
                        "auth_fields": {
                          "fields": [
                            {
                              "name": "personal_access_token",
                              "title": "Personal Access Token",
                              "description": "GitHub Personal Access Token with repository read permissions",
                              "type": "string",
                              "secret": true
                            },
                            {
                              "name": "repo_name",
                              "title": "Repository Name",
                              "description": "Full repository name in format 'owner/repo'",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "List Collections",
        "description": "List all collections that belong to your organization.",
        "operationId": "list_collections_collections_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of collections to skip for pagination",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of collections to skip for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of collections to return (1-1000)",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of collections to return (1-1000)"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collection"
                  },
                  "title": "Response List Collections Collections Get"
                },
                "examples": {
                  "collections_list": {
                    "summary": "Finance data collection",
                    "value": [
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "Finance Data",
                        "readable_id": "finance-data-ab123",
                        "created_at": "2024-01-15T09:30:00Z",
                        "modified_at": "2024-01-15T14:22:15Z",
                        "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                        "created_by_email": "admin@company.com",
                        "modified_by_email": "finance@company.com",
                        "status": "ACTIVE"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Create Collection",
        "description": "Create a new collection.\n\n<br/><br/>\nThe newly created collection is initially empty and does not contain any data\nuntil you explicitly add source connections to it.",
        "operationId": "create_collection_collections_post",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{readable_id}": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Get Collection",
        "description": "Retrieve a specific collection by its readable ID.",
        "operationId": "get_collection_collections__readable_id__get",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection (e.g., 'finance-data-ab123')",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection (e.g., 'finance-data-ab123')"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "collections"
        ],
        "summary": "Update Collection",
        "description": "Update a collection's properties.\n\n<br/><br/>\nModifies the display name of an existing collection.\nNote that the readable ID cannot be changed after creation to maintain stable\nAPI endpoints and preserve any existing integrations or bookmarks.",
        "operationId": "update_collection_collections__readable_id__put",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to update",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to update"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "collections"
        ],
        "summary": "Delete Collection",
        "description": "Delete a collection and optionally its associated data.\n\n<br/><br/>\nPermanently removes a collection from your organization. By default, this only\ndeletes the collection metadata while preserving the actual data in the\ndestination systems.<br/><br/>All source connections within this collection\nwill also be deleted as part of the cleanup process.",
        "operationId": "delete_collection_collections__readable_id__delete",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to delete",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to delete"
          },
          {
            "name": "delete_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to also delete all associated data from destination systems",
              "default": false,
              "title": "Delete Data"
            },
            "description": "Whether to also delete all associated data from destination systems"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{readable_id}/search": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Search Collection",
        "description": "Search across all data sources within the specified collection.\n\nThis GET endpoint provides basic search functionality. For advanced filtering\nand options, use the POST /search endpoint.",
        "operationId": "search_collection_collections__readable_id__search_get",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to search",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to search"
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The search query text to find relevant documents and data",
              "examples": [
                "customer payment issues",
                "Q4 revenue trends",
                "support tickets about billing"
              ],
              "title": "Query"
            },
            "description": "The search query text to find relevant documents and data"
          },
          {
            "name": "response_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ResponseType",
              "description": "Format of the response: 'raw' returns search results, 'completion' returns AI-generated answers",
              "examples": [
                "raw",
                "completion"
              ],
              "default": "raw"
            },
            "description": "Format of the response: 'raw' returns search results, 'completion' returns AI-generated answers"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of results to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of results to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of results to skip for pagination",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of results to skip for pagination"
          },
          {
            "name": "score_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 1.0,
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum similarity score threshold",
              "title": "Score Threshold"
            },
            "description": "Minimum similarity score threshold"
          },
          {
            "name": "expansion_strategy",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/QueryExpansionStrategy",
              "description": "Query expansion strategy (auto, llm, or no_expansion)",
              "default": "auto"
            },
            "description": "Query expansion strategy (auto, llm, or no_expansion)"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                },
                "examples": {
                  "raw_results_search": {
                    "summary": "Raw search results with metadata",
                    "value": {
                      "results": [
                        {
                          "id": "f30bf505-cc33-4c74-920c-524eab49334c",
                          "score": 0.92,
                          "payload": {
                            "entity_id": "1207573546742333",
                            "breadcrumbs": [],
                            "source_name": "Asana",
                            "md_content": "Implement user authentication - Build secure login system with JWT tokens",
                            "md_type": "text",
                            "metadata": {
                              "project_name": "Q4 Development Sprint",
                              "assignee": "john.doe@company.com",
                              "due_date": "2024-01-20",
                              "priority": "high",
                              "tags": [
                                "authentication",
                                "security",
                                "backend"
                              ]
                            },
                            "md_position": 0,
                            "md_parent_title": "Authentication Module"
                          }
                        },
                        {
                          "id": "fb6c49f7-2f9a-4000-ad50-96d1047a8f10",
                          "score": 0.87,
                          "payload": {
                            "entity_id": "1207921130902216",
                            "breadcrumbs": [],
                            "source_name": "Asana",
                            "md_content": "Review and update API authentication documentation",
                            "md_type": "text",
                            "metadata": {
                              "project_name": "Documentation Updates",
                              "assignee": "sarah.smith@company.com",
                              "status": "in_progress",
                              "last_modified": "2024-01-18T14:30:00Z"
                            },
                            "md_position": 0,
                            "md_parent_title": "API Documentation"
                          }
                        }
                      ],
                      "response_type": "raw",
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Search Collection Advanced",
        "description": "Advanced search with comprehensive filtering and options.\n\nThis endpoint supports:\n- Metadata filtering using Qdrant's native filter syntax\n- Pagination with offset and limit\n- Score threshold filtering\n- Query expansion strategies",
        "operationId": "search_collection_advanced_collections__readable_id__search_post",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to search",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to search"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                },
                "examples": {
                  "completion_response_search": {
                    "summary": "Search with AI-generated completion",
                    "value": {
                      "results": [
                        {
                          "id": "stripe_cust_1234567890",
                          "score": 0.94,
                          "payload": {
                            "entity_id": "cust_1234567890",
                            "source_name": "Stripe",
                            "title": "Customer Payment Record",
                            "content": "Monthly subscription payment of $99.00 processed successfully for customer John Doe (john@company.com). Payment method: Visa ending in 4242.",
                            "metadata": {
                              "date": "2024-01-15T10:30:00Z",
                              "type": "payment",
                              "amount": 99.0,
                              "currency": "USD",
                              "customer_email": "john@company.com"
                            }
                          }
                        },
                        {
                          "id": "zendesk_ticket_789",
                          "score": 0.89,
                          "payload": {
                            "entity_id": "ticket_789",
                            "source_name": "Zendesk",
                            "title": "Billing Question - Subscription Upgrade",
                            "content": "Customer inquiry about upgrading from Basic to Pro plan. Customer mentioned they need advanced analytics features.",
                            "metadata": {
                              "date": "2024-01-14T14:22:00Z",
                              "type": "support_ticket",
                              "status": "resolved",
                              "priority": "medium",
                              "agent": "support@company.com"
                            }
                          }
                        }
                      ],
                      "completion": "Based on your recent data:\n\n## Payment Processing\nCustomer John Doe successfully processed a **$99 monthly subscription payment** on January 15th using a Visa card ending in 4242.\n\n## Customer Support Activity\nThere was a related support ticket from January 14th where a customer inquired about **upgrading from Basic to Pro plan** for advanced analytics features. This ticket has been resolved.\n\n### Summary\nThis shows strong customer engagement with your premium offerings, with successful payment processing and interest in higher-tier features.",
                      "response_type": "completion",
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{readable_id}/refresh_all": {
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Refresh All Source Connections",
        "description": "Trigger data synchronization for all source connections in the collection.\n\n<br/><br/>The sync jobs run asynchronously in the background, so this endpoint\nreturns immediately with job details that you can use to track progress. You can\nmonitor the status of individual data synchronization using the source connection\nendpoints.",
        "operationId": "refresh_all_source_connections_collections__readable_id__refresh_all_post",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to refresh",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to refresh"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionJob"
                  },
                  "title": "Response Refresh All Source Connections Collections  Readable Id  Refresh All Post"
                },
                "examples": {
                  "sync_job_history": {
                    "summary": "Multiple sync jobs triggered",
                    "value": [
                      {
                        "source_connection_id": "550e8400-e29b-41d4-a716-446655440000",
                        "id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
                        "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                        "created_by_email": "engineering@company.com",
                        "modified_by_email": "engineering@company.com",
                        "created_at": "2024-01-15T14:00:00Z",
                        "modified_at": "2024-01-15T14:05:22Z",
                        "status": "completed",
                        "entities_inserted": 45,
                        "entities_updated": 12,
                        "entities_deleted": 3,
                        "entities_kept": 234,
                        "entities_skipped": 8,
                        "entities_encountered": {
                          "issues": 67,
                          "pull_requests": 23,
                          "commits": 156,
                          "releases": 12,
                          "readme_files": 8
                        },
                        "started_at": "2024-01-15T14:00:15Z",
                        "completed_at": "2024-01-15T14:05:22Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/source-connections": {
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "List Source Connections",
        "description": "List source connections across your organization.\n\n<br/><br/>\nBy default, returns ALL source connections from every collection in your\norganization. Use the 'collection' parameter to filter results to a specific\ncollection. This is useful for getting an overview of all your data sources\nor managing connections within a particular collection.",
        "operationId": "list_source_connections_source_connections_get",
        "parameters": [
          {
            "name": "collection",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter source connections by collection readable ID",
              "title": "Collection"
            },
            "description": "Filter source connections by collection readable ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of source connections to skip for pagination",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of source connections to skip for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of source connections to return (1-1000)",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of source connections to return (1-1000)"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionListItem"
                  },
                  "title": "Response List Source Connections Source Connections Get"
                },
                "examples": {
                  "source_connections_list": {
                    "summary": "Multiple source connections across collections",
                    "value": [
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "GitHub - Engineering Documentation",
                        "description": "Sync technical documentation and code from our engineering repos",
                        "short_name": "github",
                        "status": "active",
                        "created_at": "2024-01-15T09:30:00Z",
                        "modified_at": "2024-01-15T14:22:15Z",
                        "sync_id": "123e4567-e89b-12d3-a456-426614174000",
                        "collection": "engineering-docs-ab123"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "source-connections"
        ],
        "summary": "Create Source Connection",
        "description": "Create a new source connection to sync data into your collection.\n\n<br/><br/>\n\n**This endpoint only works for sources that do not use OAuth2.0.**\nSources that do use OAuth2.0 like Google Drive, Slack, or HubSpot must be\nconnected through the UI where you can complete the OAuth consent flow.<br/><br/>\n\nCredentials for a source have to be provided using the `auth_fields` field.\nCurrently, it is not automatically checked if the provided credentials are valid.\nIf they are not valid, the data synchronization will fail.<br/><br/>\n\nCheck the documentation of a specific source (for example\n[Github](https://docs.airweave.ai/docs/connectors/github)) to see what kind\nof authentication is used.",
        "operationId": "create_source_connection_source_connections_post",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceConnectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/source-connections/{source_connection_id}": {
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "Get Source Connection",
        "description": "Retrieve a specific source connection by its ID.",
        "operationId": "get_source_connection_source_connections__source_connection_id__get",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection"
          },
          {
            "name": "show_auth_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to reveal authentication credentials.",
              "default": false,
              "title": "Show Auth Fields"
            },
            "description": "Whether to reveal authentication credentials."
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "source-connections"
        ],
        "summary": "Update Source Connection",
        "description": "Update a source connection's properties.\n\n<br/><br/>\n\nModify the configuration of an existing source connection including its name,\nauthentication credentials, configuration fields, sync schedule, or source-specific settings.",
        "operationId": "update_source_connection_source_connections__source_connection_id__put",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection to update",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection to update"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceConnectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "source-connections"
        ],
        "summary": "Delete Source Connection",
        "description": "Delete a source connection.\n\n<br/><br/>\n\nPermanently removes the source connection configuration and credentials.\nBy default, previously synced data remains in your destination systems for continuity.\nUse delete_data=true to also remove all associated data from destination systems.",
        "operationId": "delete_source_connection_source_connections__source_connection_id__delete",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection to delete",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection to delete"
          },
          {
            "name": "delete_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to also delete all synced data from destination systems",
              "default": false,
              "title": "Delete Data"
            },
            "description": "Whether to also delete all synced data from destination systems"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/source-connections/{source_connection_id}/run": {
      "post": {
        "tags": [
          "source-connections"
        ],
        "summary": "Run Source Connection",
        "description": "Manually trigger a data sync for this source connection.\n\n<br/><br/>\nStarts an immediate synchronization job that extracts fresh data from your source,\ntransforms it according to your configuration, and updates the destination systems.\nThe job runs asynchronously and endpoint returns immediately with tracking information.",
        "operationId": "run_source_connection_source_connections__source_connection_id__run_post",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection to sync",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection to sync"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_run_source_connection_source_connections__source_connection_id__run_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnectionJob"
                },
                "examples": {
                  "completed_job": {
                    "summary": "Sync job successfully triggered",
                    "value": {
                      "source_connection_id": "550e8400-e29b-41d4-a716-446655440000",
                      "id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
                      "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                      "created_by_email": "engineering@company.com",
                      "modified_by_email": "engineering@company.com",
                      "created_at": "2024-01-15T14:00:00Z",
                      "modified_at": "2024-01-15T14:05:22Z",
                      "status": "completed",
                      "entities_inserted": 45,
                      "entities_updated": 12,
                      "entities_deleted": 3,
                      "entities_kept": 234,
                      "entities_skipped": 8,
                      "entities_encountered": {
                        "issues": 67,
                        "pull_requests": 23,
                        "commits": 156,
                        "releases": 12,
                        "readme_files": 8
                      },
                      "started_at": "2024-01-15T14:00:15Z",
                      "completed_at": "2024-01-15T14:05:22Z"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/source-connections/{source_connection_id}/jobs": {
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "List Source Connection Jobs",
        "description": "List all sync jobs for a source connection.\n\n<br/><br/>\nReturns the complete history of data synchronization jobs including successful syncs,\nfailed attempts, and currently running operations.",
        "operationId": "list_source_connection_jobs_source_connections__source_connection_id__jobs_get",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionJob"
                  },
                  "title": "Response List Source Connection Jobs Source Connections  Source Connection Id  Jobs Get"
                },
                "examples": {
                  "sync_job_history": {
                    "summary": "Complete sync job history",
                    "value": [
                      {
                        "source_connection_id": "550e8400-e29b-41d4-a716-446655440000",
                        "id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
                        "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                        "created_by_email": "engineering@company.com",
                        "modified_by_email": "engineering@company.com",
                        "created_at": "2024-01-15T14:00:00Z",
                        "modified_at": "2024-01-15T14:05:22Z",
                        "status": "completed",
                        "entities_inserted": 45,
                        "entities_updated": 12,
                        "entities_deleted": 3,
                        "entities_kept": 234,
                        "entities_skipped": 8,
                        "entities_encountered": {
                          "issues": 67,
                          "pull_requests": 23,
                          "commits": 156,
                          "releases": 12,
                          "readme_files": 8
                        },
                        "started_at": "2024-01-15T14:00:15Z",
                        "completed_at": "2024-01-15T14:05:22Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/source-connections/{source_connection_id}/jobs/{job_id}": {
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "Get Source Connection Job",
        "description": "Get detailed information about a specific sync job.",
        "operationId": "get_source_connection_job_source_connections__source_connection_id__jobs__job_id__get",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the sync job",
              "title": "Job Id"
            },
            "description": "The unique identifier of the sync job"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnectionJob"
                },
                "examples": {
                  "completed_job": {
                    "summary": "Detailed sync job information",
                    "value": {
                      "source_connection_id": "550e8400-e29b-41d4-a716-446655440000",
                      "id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
                      "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                      "created_by_email": "engineering@company.com",
                      "modified_by_email": "engineering@company.com",
                      "created_at": "2024-01-15T14:00:00Z",
                      "modified_at": "2024-01-15T14:05:22Z",
                      "status": "completed",
                      "entities_inserted": 45,
                      "entities_updated": 12,
                      "entities_deleted": 3,
                      "entities_kept": 234,
                      "entities_skipped": 8,
                      "entities_encountered": {
                        "issues": 67,
                        "pull_requests": 23,
                        "commits": 156,
                        "releases": 12,
                        "readme_files": 8
                      },
                      "started_at": "2024-01-15T14:00:15Z",
                      "completed_at": "2024-01-15T14:05:22Z"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/source-connections/{source_connection_id}/jobs/{job_id}/cancel": {
      "post": {
        "tags": [
          "source-connections"
        ],
        "summary": "Cancel Source Connection Job",
        "description": "Cancel a running sync job.\n\n<br/><br/>\nSends a cancellation signal to stop an in-progress data synchronization.\nThe job will complete its current operation and then terminate gracefully.\nOnly jobs in 'created', 'pending', or 'in_progress' states can be cancelled.",
        "operationId": "cancel_source_connection_job_source_connections__source_connection_id__jobs__job_id__cancel_post",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the source connection",
              "title": "Source Connection Id"
            },
            "description": "The unique identifier of the source connection"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the sync job to cancel",
              "title": "Job Id"
            },
            "description": "The unique identifier of the sync job to cancel"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnectionJob"
                },
                "examples": {
                  "cancelled_job": {
                    "summary": "Successfully cancelled sync job",
                    "value": {
                      "source_connection_id": "550e8400-e29b-41d4-a716-446655440000",
                      "id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
                      "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                      "created_by_email": "engineering@company.com",
                      "modified_by_email": "engineering@company.com",
                      "created_at": "2024-01-15T14:00:00Z",
                      "modified_at": "2024-01-15T14:02:30Z",
                      "status": "cancelled",
                      "entities_inserted": 12,
                      "entities_updated": 3,
                      "entities_deleted": 0,
                      "entities_kept": 89,
                      "entities_skipped": 2,
                      "entities_encountered": {
                        "issues": 23,
                        "pull_requests": 8,
                        "commits": 67
                      },
                      "started_at": "2024-01-15T14:00:15Z",
                      "failed_at": "2024-01-15T14:02:30Z",
                      "error": "Job cancelled by user"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/white-labels/list": {
      "get": {
        "tags": [
          "white-labels"
        ],
        "summary": "List White Labels",
        "description": "List all white label integrations for your organization.\n\n<br/><br/>\nReturns all custom OAuth integrations configured with your own branding and\ncredentials. These integrations allow you to present OAuth consent screens with\nyour company name instead of Airweave.<br/><br/>**White label integrations only\nwork with OAuth2.0 sources** like Slack, Google Drive, or HubSpot that require\nOAuth consent flows.",
        "operationId": "list_white_labels_white_labels_list_get",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WhiteLabel"
                  },
                  "title": "Response List White Labels White Labels List Get"
                },
                "examples": {
                  "white_labels_list": {
                    "summary": "GitHub integration",
                    "value": [
                      {
                        "id": "white789-0abc-def0-1234-567890abcdef",
                        "name": "Support Team GitHub Integration",
                        "source_short_name": "github",
                        "redirect_url": "https://support.yoursite.com/integrations/github/callback",
                        "client_id": "Iv1.a1b2c3d4e5f6g7h8",
                        "client_secret": "1234567890abcdef1234567890abcdef12345678",
                        "allowed_origins": "https://support.yoursite.com,https://internal.yoursite.com",
                        "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                        "created_at": "2024-01-05T16:45:00Z",
                        "modified_at": "2024-01-14T10:20:00Z",
                        "created_by_email": "support@company.com",
                        "modified_by_email": "admin@company.com"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/white-labels": {
      "post": {
        "tags": [
          "white-labels"
        ],
        "summary": "Create White Label",
        "description": "Create a new white label integration.\n\n<br/><br/>\n**This only works for sources that use OAuth2.0 authentication** like Slack,\nGoogle Drive, GitHub, or HubSpot.<br/><br/>Sets up a custom OAuth integration\nusing your own OAuth application credentials and branding. Once created,\ncustomers will see your company name during OAuth consent flows instead of\nAirweave. This requires you to have already configured your own OAuth\napplication with the target service provider.",
        "operationId": "create_white_label_white_labels_post",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhiteLabelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteLabel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/white-labels/{white_label_id}": {
      "get": {
        "tags": [
          "white-labels"
        ],
        "summary": "Get White Label",
        "description": "Retrieve a specific white label integration by its ID.",
        "operationId": "get_white_label_white_labels__white_label_id__get",
        "parameters": [
          {
            "name": "white_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the white label integration",
              "title": "White Label Id"
            },
            "description": "The unique identifier of the white label integration"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteLabel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "white-labels"
        ],
        "summary": "Update White Label",
        "description": "Update a white label integration's configuration.",
        "operationId": "update_white_label_white_labels__white_label_id__put",
        "parameters": [
          {
            "name": "white_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the white label integration to update",
              "title": "White Label Id"
            },
            "description": "The unique identifier of the white label integration to update"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhiteLabelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteLabel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "white-labels"
        ],
        "summary": "Delete White Label",
        "description": "Delete a white label integration.\n\n<br/><br/>\nPermanently removes the white label configuration and OAuth credentials.\nExisting source connections created through this integration will continue to work,\nbut no new OAuth flows can be initiated until a new white label integration is created.",
        "operationId": "delete_white_label_white_labels__white_label_id__delete",
        "parameters": [
          {
            "name": "white_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the white label integration to delete",
              "title": "White Label Id"
            },
            "description": "The unique identifier of the white label integration to delete"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhiteLabel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/white-labels/{white_label_id}/oauth2/auth_url": {
      "get": {
        "tags": [
          "white-labels"
        ],
        "summary": "Get White Label Oauth2 Auth Url",
        "description": "Generate a branded OAuth2 authorization URL for customer authentication.\n\n<br/><br/>\nCreates the OAuth consent URL that customers should be redirected to for\nauthentication. The OAuth consent screen will display your company name and\nbranding instead of Airweave.",
        "operationId": "get_white_label_oauth2_auth_url_white_labels__white_label_id__oauth2_auth_url_get",
        "parameters": [
          {
            "name": "white_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the white label integration",
              "title": "White Label Id"
            },
            "description": "The unique identifier of the white label integration"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth2 authorization URL with your branding",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get White Label Oauth2 Auth Url White Labels  White Label Id  Oauth2 Auth Url Get"
                },
                "examples": {
                  "slack_auth_url": {
                    "summary": "Slack OAuth URL",
                    "value": "https://slack.com/oauth/v2/authorize?response_type=code&client_id=1234567890.1234567890123&redirect_uri=https%3A//yourapp.com/auth/slack/callback&scope=channels%3Aread+chat%3Awrite+users%3Aread"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/white-labels/{white_label_id}/source-connections": {
      "get": {
        "tags": [
          "white-labels"
        ],
        "summary": "List White Label Source Connections",
        "description": "List all source connections created through a specific white label integration.\n\n<br/><br/>\nReturns source connections that were established using this white label's OAuth flow.",
        "operationId": "list_white_label_source_connections_white_labels__white_label_id__source_connections_get",
        "parameters": [
          {
            "name": "white_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the white label integration",
              "title": "White Label Id"
            },
            "description": "The unique identifier of the white label integration"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionListItem"
                  },
                  "title": "Response List White Label Source Connections White Labels  White Label Id  Source Connections Get"
                },
                "examples": {
                  "source_connections_list": {
                    "summary": "Source connections created through white label OAuth flows",
                    "value": [
                      {
                        "id": "white123-4567-89ab-cdef-012345678901",
                        "name": "Customer Slack Workspace",
                        "description": "Team communications and project discussions from customer's Slack workspace",
                        "short_name": "slack",
                        "status": "active",
                        "created_at": "2024-01-16T10:15:00Z",
                        "modified_at": "2024-01-16T10:15:00Z",
                        "sync_id": "wl456789-abcd-ef01-2345-67890abcdef1",
                        "collection": "customer-communications-xy789",
                        "white_label_id": "wl123456-789a-bcde-f012-345678901234"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/white-labels/{white_label_id}/oauth2/code": {
      "post": {
        "tags": [
          "white-labels"
        ],
        "summary": "Exchange White Label Oauth2 Code",
        "description": "Complete the OAuth flow and create a source connection.\n\n<br/><br/>\n**This is the core endpoint that converts OAuth authorization codes into working\nsource connections.**<br/><br/>The OAuth credentials are obtained automatically\nfrom the authorization code - you do not need to provide auth_fields. The white\nlabel integration is automatically linked to the created source connection for\ntracking and branding purposes.",
        "operationId": "exchange_white_label_oauth2_code_white_labels__white_label_id__oauth2_code_options",
        "parameters": [
          {
            "name": "white_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of the white label integration",
              "title": "White Label Id"
            },
            "description": "The unique identifier of the white label integration"
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "X-Organization-ID",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Organization-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_exchange_white_label_oauth2_code_white_labels__white_label_id__oauth2_code_options"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIKey": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization": {
            "type": "string",
            "format": "uuid",
            "title": "Organization"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "last_used_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used Date"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration Date"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "decrypted_key": {
            "type": "string",
            "title": "Decrypted Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization",
          "created_at",
          "modified_at",
          "expiration_date",
          "decrypted_key"
        ],
        "title": "APIKey",
        "description": "Schema for API keys returned to clients - includes decrypted key."
      },
      "APIKeyCreate": {
        "properties": {
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date",
            "description": "Expiration date for the API key, defaults to 180 days from now"
          }
        },
        "type": "object",
        "title": "APIKeyCreate",
        "description": "Schema for creating an APIKey object."
      },
      "AuthProvider": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable name of the auth provider (e.g., 'Google OAuth', 'GitHub')"
          },
          "short_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Short Name",
            "description": "Technical identifier used internally to reference this auth provider. Must be unique."
          },
          "class_name": {
            "type": "string",
            "title": "Class Name",
            "description": "Python class name of the auth provider implementation"
          },
          "auth_config_class": {
            "type": "string",
            "title": "Auth Config Class",
            "description": "Python class name that defines the authentication configuration fields"
          },
          "config_class": {
            "type": "string",
            "title": "Config Class",
            "description": "Python class name that defines the auth provider-specific configuration"
          },
          "auth_type": {
            "$ref": "#/components/schemas/AuthType",
            "description": "Type of authentication mechanism used by this provider"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description explaining what this auth provider offers"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id",
            "description": "Organization identifier for custom auth providers. System providers have this set to null."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dynamically populated field definitions for authentication configuration. These describe what credentials are required to connect to this auth provider."
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dynamically populated field definitions for auth provider-specific configuration. These describe what additional configuration is required when using this auth provider to connect to a source (e.g., integration_id and account_id for Composio)."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "auth_config_class",
          "config_class",
          "auth_type",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "AuthProvider",
        "description": "Schema for auth provider response."
      },
      "AuthProviderConnection": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "readable_id": {
            "type": "string",
            "title": "Readable Id",
            "description": "URL-safe unique identifier that can be used to reference this connection when setting up source connections.",
            "examples": [
              "composio-connection-ab123",
              "oauth-github-xy789"
            ]
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the connection"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email of the user who created this connection"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email of the user who last modified this connection"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "readable_id",
          "short_name",
          "created_at",
          "modified_at"
        ],
        "title": "AuthProviderConnection",
        "description": "Schema for auth provider connection response."
      },
      "AuthProviderConnectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable name for this auth provider connection"
          },
          "readable_id": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readable Id",
            "description": "URL-safe unique identifier for the connection. Must contain only lowercase letters, numbers, and hyphens. If not provided, it will be automatically generated from the connection name with a random suffix for uniqueness (e.g., 'composio-connection-ab123').",
            "examples": [
              "my-composio-connection",
              "oauth-github-prod"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this auth provider connection provides."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the auth provider"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Authentication credentials required to access the auth provider. The required fields vary by auth provider type."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name"
        ],
        "title": "AuthProviderConnectionCreate",
        "description": "Schema for creating an auth provider connection with credentials.",
        "example": {
          "auth_fields": {
            "api_key": "comp_1234567890abcdef"
          },
          "description": "My Composio Connection",
          "name": "My Composio Connection",
          "short_name": "composio"
        }
      },
      "AuthProviderConnectionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-readable name for this auth provider connection"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this auth provider connection provides."
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Updated authentication credentials for the auth provider. The required fields vary by auth provider type. If provided, all existing credentials will be replaced."
          }
        },
        "type": "object",
        "title": "AuthProviderConnectionUpdate",
        "description": "Schema for updating an auth provider connection.",
        "example": {
          "auth_fields": {
            "api_key": "comp_new_api_key_1234"
          },
          "description": "Updated description",
          "name": "Updated Composio Connection"
        }
      },
      "AuthType": {
        "type": "string",
        "enum": [
          "oauth2",
          "oauth2_with_refresh",
          "oauth2_with_refresh_rotating",
          "api_key",
          "native_functionality",
          "config_class",
          "trello_auth",
          "none"
        ],
        "title": "AuthType",
        "description": "Enumeration of supported authentication types.\n\nAttributes:\n----------\n    oauth2: OAuth2 authentication.\n    oauth2_with_refresh: OAuth2 authentication with refresh token.\n    oauth2_with_refresh_rotating: OAuth2 authentication with rotating refresh token.\n    api_key: API key authentication.\n    native_functionality: Native functionality.\n    url_and_api_key: URL and API key authentication.\n    none: No authentication."
      },
      "Body_connect_slack_with_token_connections_direct_token_slack_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Body_connect_slack_with_token_connections_direct_token_slack_post"
      },
      "Body_create_credentials_from_authorization_code_source_connections__source_short_name__code_to_token_credentials_post": {
        "properties": {
          "credential_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credential Name",
            "description": "Custom name for the stored credential"
          },
          "credential_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credential Description",
            "description": "Description to help identify this credential"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id",
            "description": "OAuth client ID (required for bring-your-own-credentials)"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret",
            "description": "OAuth client secret (required for bring-your-own-credentials)"
          }
        },
        "type": "object",
        "title": "Body_create_credentials_from_authorization_code_source_connections__source_short_name__code_to_token_credentials_post"
      },
      "Body_exchange_white_label_oauth2_code_white_labels__white_label_id__oauth2_code_options": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "The OAuth2 authorization code received from the OAuth callback after customer authentication",
            "examples": [
              "4/P7q7W91a-oMsCeLvIaQm6bTrgtp7"
            ]
          },
          "source_connection_in": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SourceConnectionCreateWithWhiteLabel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional configuration for the source connection. If not provided, a source connection will be created automatically with default settings. The white label integration is automatically linked to the source connection."
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "Body_exchange_white_label_oauth2_code_white_labels__white_label_id__oauth2_code_options"
      },
      "Body_run_source_connection_source_connections__source_connection_id__run_post": {
        "properties": {
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token",
            "description": "This parameter gives you the ability to start a sync job with an access token for an OAuth2.0 source directly instead of using the credentials that Airweave has stored for you. Learn more about direct token injection [here](https://docs.airweave.ai/direct-token-injection).",
            "examples": [
              "ya29.a0AfH6SMBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
              "gho_abcdefghijklmnopqrstuvwxyz1234567890",
              "sk-1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQR"
            ]
          }
        },
        "type": "object",
        "title": "Body_run_source_connection_source_connections__source_connection_id__run_post"
      },
      "Collection": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable display name for the collection."
          },
          "readable_id": {
            "type": "string",
            "title": "Readable Id",
            "description": "URL-safe unique identifier used in API endpoints. This becomes non-optional once the collection is created."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for the collection. This UUID is generated automatically and used for internal references."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the collection was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the collection was last modified (ISO 8601 format)."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id",
            "description": "Identifier of the organization that owns this collection. Collections are isolated per organization."
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email address of the user who created this collection."
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email address of the user who last modified this collection."
          },
          "status": {
            "$ref": "#/components/schemas/CollectionStatus",
            "description": "Current operational status of the collection:<br/>\u2022 **NEEDS_SOURCE**: Collection exists but has no source connections configured yet<br/>\u2022 **ACTIVE**: All source connections are healthy and data is being synced successfully<br/>\u2022 **PARTIAL_ERROR**: Some source connections are failing but others are working<br/>\u2022 **ERROR**: All source connections are failing or in error state",
            "default": "NEEDS SOURCE"
          }
        },
        "type": "object",
        "required": [
          "name",
          "readable_id",
          "id",
          "created_at",
          "modified_at",
          "organization_id"
        ],
        "title": "Collection",
        "description": "Complete collection representation returned by the API.\n\nThis schema includes all collection metadata plus computed status information\nbased on the health and state of associated source connections.",
        "examples": [
          {
            "created_at": "2024-01-15T09:30:00Z",
            "created_by_email": "admin@company.com",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "modified_at": "2024-01-15T14:22:15Z",
            "modified_by_email": "finance@company.com",
            "name": "Finance Data",
            "organization_id": "org12345-6789-abcd-ef01-234567890abc",
            "readable_id": "finance-data-ab123",
            "status": "ACTIVE"
          }
        ]
      },
      "CollectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 4,
            "title": "Name",
            "description": "Human-readable display name for the collection. This appears in the UI and should clearly describe the data contained within (e.g., 'Finance Data').",
            "examples": [
              "Finance Data",
              "Customer Support",
              "Marketing Analytics"
            ]
          },
          "readable_id": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readable Id",
            "description": "URL-safe unique identifier used in API endpoints. Must contain only lowercase letters, numbers, and hyphens. If not provided, it will be automatically generated from the collection name with a random suffix for uniqueness (e.g., 'finance-data-ab123').",
            "examples": [
              "finance-data-ab123",
              "customer-support-xy789",
              "marketing-analytics-cd456"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CollectionCreate",
        "description": "Schema for creating a new collection.\n\nCollections serve as logical containers for organizing related data sources.\nOnce created, you can add source connections to populate the collection with data\nfrom various sources like databases, APIs, and file systems.",
        "examples": [
          {
            "name": "Finance Data",
            "readable_id": "finance-data-reports"
          },
          {
            "name": "Customer Support"
          }
        ]
      },
      "CollectionStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "PARTIAL ERROR",
          "NEEDS SOURCE",
          "ERROR"
        ],
        "title": "CollectionStatus",
        "description": "Collection status enum."
      },
      "CollectionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Updated display name for the collection. Must be between 4 and 64 characters."
          }
        },
        "type": "object",
        "title": "CollectionUpdate",
        "description": "Schema for updating an existing collection.\n\nOnly the collection's display name can be updated. The readable_id is immutable\nto maintain stable API endpoints and references.",
        "examples": [
          {
            "name": "Updated Finance Data"
          },
          {
            "name": "Marketing Analytics - Q1 2024"
          },
          {
            "name": "Customer Support Archive"
          }
        ]
      },
      "ConfigField": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "type"
        ],
        "title": "ConfigField",
        "description": "Config field model."
      },
      "ConfigValues": {
        "properties": {},
        "additionalProperties": true,
        "type": "object",
        "title": "ConfigValues",
        "description": "Config values model.\n\nImplements \"flat dictionary\" semantics, where no values are dictionaries."
      },
      "Connection": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable display name for the connection."
          },
          "readable_id": {
            "type": "string",
            "title": "Readable Id",
            "description": "URL-safe unique identifier used in API endpoints. This becomes non-optional once the connection is created."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "integration_credential_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Credential Id"
          },
          "status": {
            "$ref": "#/components/schemas/ConnectionStatus"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for the connection."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the connection was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the connection was last modified (ISO 8601 format)."
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "readable_id",
          "integration_type",
          "status",
          "short_name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "Connection",
        "description": "Schema for connection with config fields."
      },
      "ConnectionStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "error"
        ],
        "title": "ConnectionStatus",
        "description": "Connection status enum."
      },
      "DagEdge": {
        "properties": {
          "from_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "From Node Id"
          },
          "to_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "To Node Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dag_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dag Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "from_node_id",
          "to_node_id",
          "id",
          "dag_id",
          "organization_id"
        ],
        "title": "DagEdge",
        "description": "Schema for a DAG edge."
      },
      "DagEdgeCreate": {
        "properties": {
          "from_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "From Node Id"
          },
          "to_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "To Node Id"
          }
        },
        "type": "object",
        "required": [
          "from_node_id",
          "to_node_id"
        ],
        "title": "DagEdgeCreate",
        "description": "Schema for creating a DAG edge."
      },
      "DagNode": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id"
          },
          "entity_definition_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Definition Id"
          },
          "transformer_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformer Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dag_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dag Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "id",
          "dag_id",
          "organization_id"
        ],
        "title": "DagNode",
        "description": "Schema for a DAG node."
      },
      "DagNodeCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id"
          },
          "entity_definition_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Definition Id"
          },
          "transformer_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformer Id"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Optional pre-set ID for the node"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "title": "DagNodeCreate",
        "description": "Schema for creating a DAG node."
      },
      "DatetimeRange": {
        "properties": {
          "lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt",
            "description": "point.key &lt; range.lt"
          },
          "gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt",
            "description": "point.key &gt; range.gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte",
            "description": "point.key &gt;= range.gte"
          },
          "lte": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte",
            "description": "point.key &lt;= range.lte"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "DatetimeRange",
        "description": "Range filter request"
      },
      "Destination": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "input_entity_definition_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Entity Definition Ids"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "config_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Schema"
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "Destination",
        "description": "Schema for Destination."
      },
      "DestinationWithAuthenticationFields": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "input_entity_definition_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Entity Definition Ids"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "config_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Schema"
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "DestinationWithAuthenticationFields",
        "description": "Schema for Destination with auth config."
      },
      "EmbeddingModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "provider",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "EmbeddingModel",
        "description": "Schema for EmbeddingModel."
      },
      "EmbeddingModelWithAuthenticationFields": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "provider",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "EmbeddingModelWithAuthenticationFields",
        "description": "Schema for EmbeddingModel with auth config."
      },
      "EntityCount": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "EntityCount",
        "description": "Schema for entity count."
      },
      "EntityDefinition": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entity_schema": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Entity Schema"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "entity_schema",
          "module_name",
          "class_name",
          "id"
        ],
        "title": "EntityDefinition",
        "description": "Schema for an entity definition."
      },
      "EntityDefinitionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entity_schema": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Entity Schema"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "entity_schema",
          "module_name",
          "class_name"
        ],
        "title": "EntityDefinitionCreate",
        "description": "Schema for creating an entity definition."
      },
      "EntityDefinitionUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entity_schema": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Entity Schema"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "entity_schema",
          "module_name",
          "class_name"
        ],
        "title": "EntityDefinitionUpdate",
        "description": "Schema for updating an entity."
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "file",
          "json"
        ],
        "title": "EntityType",
        "description": "Type of entity."
      },
      "FieldCondition": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Payload key"
          },
          "match": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchValue"
              },
              {
                "$ref": "#/components/schemas/MatchText"
              },
              {
                "$ref": "#/components/schemas/MatchAny"
              },
              {
                "$ref": "#/components/schemas/MatchExcept"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match",
            "description": "Check if point has field with a given value"
          },
          "range": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Range"
              },
              {
                "$ref": "#/components/schemas/DatetimeRange"
              },
              {
                "type": "null"
              }
            ],
            "title": "Range",
            "description": "Check if points value lies in a given range"
          },
          "geo_bounding_box": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoBoundingBox"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check if points geolocation lies in a given area"
          },
          "geo_radius": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoRadius"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check if geo point is within a given radius"
          },
          "geo_polygon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoPolygon"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check if geo point is within a given polygon"
          },
          "values_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ValuesCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check number of values of the field"
          },
          "is_empty": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Empty",
            "description": "Check that the field is empty, alternative syntax for `is_empty: \\&quot;field_name\\&quot;`"
          },
          "is_null": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Null",
            "description": "Check that the field is null, alternative syntax for `is_null: \\&quot;field_name\\&quot;`"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FieldCondition",
        "description": "All possible payload filtering conditions"
      },
      "Fields": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ConfigField"
            },
            "type": "array",
            "title": "Fields"
          }
        },
        "type": "object",
        "required": [
          "fields"
        ],
        "title": "Fields",
        "description": "Fields model."
      },
      "Filter": {
        "properties": {
          "should": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FieldCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsEmptyCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsNullCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasIdCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasVectorCondition"
                    },
                    {
                      "$ref": "#/components/schemas/NestedCondition"
                    },
                    {
                      "$ref": "#/components/schemas/Filter"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/FieldCondition"
              },
              {
                "$ref": "#/components/schemas/IsEmptyCondition"
              },
              {
                "$ref": "#/components/schemas/IsNullCondition"
              },
              {
                "$ref": "#/components/schemas/HasIdCondition"
              },
              {
                "$ref": "#/components/schemas/HasVectorCondition"
              },
              {
                "$ref": "#/components/schemas/NestedCondition"
              },
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "title": "Should",
            "description": "At least one of those conditions should match"
          },
          "min_should": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MinShould"
              },
              {
                "type": "null"
              }
            ],
            "description": "At least minimum amount of given conditions should match"
          },
          "must": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FieldCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsEmptyCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsNullCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasIdCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasVectorCondition"
                    },
                    {
                      "$ref": "#/components/schemas/NestedCondition"
                    },
                    {
                      "$ref": "#/components/schemas/Filter"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/FieldCondition"
              },
              {
                "$ref": "#/components/schemas/IsEmptyCondition"
              },
              {
                "$ref": "#/components/schemas/IsNullCondition"
              },
              {
                "$ref": "#/components/schemas/HasIdCondition"
              },
              {
                "$ref": "#/components/schemas/HasVectorCondition"
              },
              {
                "$ref": "#/components/schemas/NestedCondition"
              },
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "title": "Must",
            "description": "All conditions must match"
          },
          "must_not": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FieldCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsEmptyCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsNullCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasIdCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasVectorCondition"
                    },
                    {
                      "$ref": "#/components/schemas/NestedCondition"
                    },
                    {
                      "$ref": "#/components/schemas/Filter"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/FieldCondition"
              },
              {
                "$ref": "#/components/schemas/IsEmptyCondition"
              },
              {
                "$ref": "#/components/schemas/IsNullCondition"
              },
              {
                "$ref": "#/components/schemas/HasIdCondition"
              },
              {
                "$ref": "#/components/schemas/HasVectorCondition"
              },
              {
                "$ref": "#/components/schemas/NestedCondition"
              },
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "title": "Must Not",
            "description": "All conditions must NOT match"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Filter"
      },
      "GeoBoundingBox": {
        "properties": {
          "top_left": {
            "$ref": "#/components/schemas/GeoPoint",
            "description": "Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges"
          },
          "bottom_right": {
            "$ref": "#/components/schemas/GeoPoint",
            "description": "Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "top_left",
          "bottom_right"
        ],
        "title": "GeoBoundingBox",
        "description": "Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges"
      },
      "GeoLineString": {
        "properties": {
          "points": {
            "items": {
              "$ref": "#/components/schemas/GeoPoint"
            },
            "type": "array",
            "title": "Points",
            "description": "Ordered sequence of GeoPoints representing the line"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "points"
        ],
        "title": "GeoLineString",
        "description": "Ordered sequence of GeoPoints representing the line"
      },
      "GeoPoint": {
        "properties": {
          "lon": {
            "type": "number",
            "title": "Lon",
            "description": "Geo point payload schema"
          },
          "lat": {
            "type": "number",
            "title": "Lat",
            "description": "Geo point payload schema"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "lon",
          "lat"
        ],
        "title": "GeoPoint",
        "description": "Geo point payload schema"
      },
      "GeoPolygon": {
        "properties": {
          "exterior": {
            "$ref": "#/components/schemas/GeoLineString",
            "description": "Geo filter request  Matches coordinates inside the polygon, defined by `exterior` and `interiors`"
          },
          "interiors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeoLineString"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interiors",
            "description": "Interior lines (if present) bound holes within the surface each GeoLineString must consist of a minimum of 4 points, and the first and last points must be the same."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "exterior"
        ],
        "title": "GeoPolygon",
        "description": "Geo filter request  Matches coordinates inside the polygon, defined by `exterior` and `interiors`"
      },
      "GeoRadius": {
        "properties": {
          "center": {
            "$ref": "#/components/schemas/GeoPoint",
            "description": "Geo filter request  Matches coordinates inside the circle of `radius` and center with coordinates `center`"
          },
          "radius": {
            "type": "number",
            "title": "Radius",
            "description": "Radius of the area in meters"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "center",
          "radius"
        ],
        "title": "GeoRadius",
        "description": "Geo filter request  Matches coordinates inside the circle of `radius` and center with coordinates `center`"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HasIdCondition": {
        "properties": {
          "has_id": {
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Has Id",
            "description": "ID-based filtering condition"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "has_id"
        ],
        "title": "HasIdCondition",
        "description": "ID-based filtering condition"
      },
      "HasVectorCondition": {
        "properties": {
          "has_vector": {
            "type": "string",
            "title": "Has Vector",
            "description": "Filter points which have specific vector assigned"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "has_vector"
        ],
        "title": "HasVectorCondition",
        "description": "Filter points which have specific vector assigned"
      },
      "IntegrationCredentialInDB": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "integration_short_name": {
            "type": "string",
            "title": "Integration Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "auth_type": {
            "$ref": "#/components/schemas/AuthType"
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "encrypted_credentials": {
            "type": "string",
            "title": "Encrypted Credentials"
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_short_name",
          "integration_type",
          "auth_type",
          "id",
          "organization_id",
          "encrypted_credentials"
        ],
        "title": "IntegrationCredentialInDB",
        "description": "Integration credential in DB without decrypted data."
      },
      "IntegrationCredentialRawCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "integration_short_name": {
            "type": "string",
            "title": "Integration Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "auth_type": {
            "$ref": "#/components/schemas/AuthType"
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "auth_fields": {
            "additionalProperties": true,
            "type": "object",
            "title": "Auth Fields"
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_short_name",
          "integration_type",
          "auth_type",
          "auth_fields"
        ],
        "title": "IntegrationCredentialRawCreate",
        "description": "Create class for integration credentials with raw auth fields.\n\nThis schema is used when auth fields need to be validated and encrypted\nbefore creating the credential."
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "source",
          "destination",
          "embedding_model",
          "auth_provider"
        ],
        "title": "IntegrationType",
        "description": "Integration type enum."
      },
      "InvitationCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "member"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "InvitationCreate",
        "description": "Schema for creating an invitation."
      },
      "InvitationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "invited_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "role",
          "status"
        ],
        "title": "InvitationResponse",
        "description": "Schema for invitation responses."
      },
      "IsEmptyCondition": {
        "properties": {
          "is_empty": {
            "$ref": "#/components/schemas/PayloadField",
            "description": "Select points with empty payload for a specified field"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "is_empty"
        ],
        "title": "IsEmptyCondition",
        "description": "Select points with empty payload for a specified field"
      },
      "IsNullCondition": {
        "properties": {
          "is_null": {
            "$ref": "#/components/schemas/PayloadField",
            "description": "Select points with null payload for a specified field"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "is_null"
        ],
        "title": "IsNullCondition",
        "description": "Select points with null payload for a specified field"
      },
      "MatchAny": {
        "properties": {
          "any": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            ],
            "title": "Any",
            "description": "Exact match on any of the given values"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "any"
        ],
        "title": "MatchAny",
        "description": "Exact match on any of the given values"
      },
      "MatchExcept": {
        "properties": {
          "except": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            ],
            "title": "Except",
            "description": "Should have at least one value not matching the any given values"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "except"
        ],
        "title": "MatchExcept",
        "description": "Should have at least one value not matching the any given values"
      },
      "MatchText": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Full-text match of the strings."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "text"
        ],
        "title": "MatchText",
        "description": "Full-text match of the strings."
      },
      "MatchValue": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Value",
            "description": "Exact match of the given value"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "value"
        ],
        "title": "MatchValue",
        "description": "Exact match of the given value"
      },
      "MemberResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "role"
        ],
        "title": "MemberResponse",
        "description": "Schema for organization member responses."
      },
      "MinShould": {
        "properties": {
          "conditions": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FieldCondition"
                },
                {
                  "$ref": "#/components/schemas/IsEmptyCondition"
                },
                {
                  "$ref": "#/components/schemas/IsNullCondition"
                },
                {
                  "$ref": "#/components/schemas/HasIdCondition"
                },
                {
                  "$ref": "#/components/schemas/HasVectorCondition"
                },
                {
                  "$ref": "#/components/schemas/NestedCondition"
                },
                {
                  "$ref": "#/components/schemas/Filter"
                }
              ]
            },
            "type": "array",
            "title": "Conditions",
            "description": ""
          },
          "min_count": {
            "type": "integer",
            "title": "Min Count",
            "description": ""
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "conditions",
          "min_count"
        ],
        "title": "MinShould"
      },
      "Nested": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Select points with payload for a specified nested field"
          },
          "filter": {
            "$ref": "#/components/schemas/Filter",
            "description": "Select points with payload for a specified nested field"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key",
          "filter"
        ],
        "title": "Nested",
        "description": "Select points with payload for a specified nested field"
      },
      "NestedCondition": {
        "properties": {
          "nested": {
            "$ref": "#/components/schemas/Nested",
            "description": ""
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "nested"
        ],
        "title": "NestedCondition"
      },
      "NodeType": {
        "type": "string",
        "enum": [
          "source",
          "destination",
          "transformer",
          "entity"
        ],
        "title": "NodeType",
        "description": "Type of node."
      },
      "OAuth2AuthUrl": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "OAuth2AuthUrl",
        "description": "OAuth2 authorization URL schema.\n\nAttributes:\n----------\n    url (str): The authorization URL."
      },
      "Organization": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "Organization",
        "description": "Organization schema."
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 4,
            "title": "Name",
            "description": "Organization name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Organization description"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id",
            "description": "Auth0 organization ID"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "OrganizationCreate",
        "description": "Organization creation schema."
      },
      "OrganizationWithRole": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "modified_at",
          "role",
          "is_primary"
        ],
        "title": "OrganizationWithRole",
        "description": "Organization schema with user's role information."
      },
      "PayloadField": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Payload field name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key"
        ],
        "title": "PayloadField",
        "description": "Payload field"
      },
      "QueryExpansionStrategy": {
        "type": "string",
        "enum": [
          "auto",
          "llm",
          "no_expansion"
        ],
        "title": "QueryExpansionStrategy",
        "description": "Query expansion strategies for search."
      },
      "Range": {
        "properties": {
          "lt": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt",
            "description": "point.key &lt; range.lt"
          },
          "gt": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt",
            "description": "point.key &gt; range.gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte",
            "description": "point.key &gt;= range.gte"
          },
          "lte": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte",
            "description": "point.key &lt;= range.lte"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Range",
        "description": "Range filter request"
      },
      "ResponseType": {
        "type": "string",
        "enum": [
          "raw",
          "completion"
        ],
        "title": "ResponseType",
        "description": "Response format options for search results."
      },
      "SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "The search query text",
            "examples": [
              "customer payment issues",
              "Q4 revenue trends",
              "support tickets about billing"
            ]
          },
          "filter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "description": "Qdrant native filter for metadata-based filtering"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset",
            "description": "Number of results to skip",
            "default": 0
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Maximum number of results to return",
            "default": 20
          },
          "score_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Threshold",
            "description": "Minimum similarity score threshold"
          },
          "summarize": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summarize",
            "description": "Whether to summarize results",
            "default": false
          },
          "response_type": {
            "$ref": "#/components/schemas/ResponseType",
            "description": "Type of response (raw or completion)",
            "default": "raw"
          },
          "expansion_strategy": {
            "$ref": "#/components/schemas/QueryExpansionStrategy",
            "description": "Query expansion strategy. Enhances recall by expanding the query with synonyms, related terms, and other variations, but increases latency.",
            "default": "auto"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchRequest",
        "description": "Comprehensive search request encapsulating all search parameters.",
        "examples": [
          {
            "filter": {
              "must": [
                {
                  "key": "source_name",
                  "match": {
                    "value": "Stripe"
                  }
                },
                {
                  "key": "created_at",
                  "range": {
                    "gte": "2024-01-01T00:00:00Z"
                  }
                }
              ]
            },
            "limit": 50,
            "query": "customer payment issues",
            "response_type": "completion",
            "score_threshold": 0.7
          }
        ]
      },
      "SearchResponse": {
        "properties": {
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "Array of search result objects containing the found documents, records, or data entities."
          },
          "response_type": {
            "$ref": "#/components/schemas/ResponseType",
            "description": "Indicates whether results are raw search matches or AI-generated completions based on the found content."
          },
          "completion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion",
            "description": "AI-generated natural language answer when response_type is 'completion'. This provides natural language answers to your query based on the content found across your connected data sources."
          },
          "status": {
            "$ref": "#/components/schemas/SearchStatus",
            "description": "Status of the search operation indicating the quality and availability of results:<br/>\u2022 **success**: Search found relevant results matching your query<br/>\u2022 **no_relevant_results**: Search completed but found no sufficiently relevant matches<br/>\u2022 **no_results**: Search found no results at all, possibly indicating empty collections or very specific queries"
          }
        },
        "type": "object",
        "required": [
          "results",
          "response_type",
          "status"
        ],
        "title": "SearchResponse",
        "description": "Comprehensive search response containing results and metadata.",
        "examples": [
          {
            "completion": "Based on your recent data, customer John Doe successfully processed a $99 monthly subscription payment on January 15th. There was also a related support ticket from January 14th where a customer inquired about upgrading from Basic to Pro plan for advanced analytics features. This suggests strong customer engagement with your premium offerings.",
            "response_type": "completion",
            "results": [
              {
                "content": "Monthly subscription payment of $99.00 processed successfully for customer John Doe (john@company.com). Payment method: Visa ending in 4242.",
                "id": "stripe_cust_1234567890",
                "metadata": {
                  "amount": 99.0,
                  "currency": "USD",
                  "date": "2024-01-15T10:30:00Z",
                  "type": "payment"
                },
                "score": 0.92,
                "source": "stripe",
                "title": "Customer Payment Record"
              },
              {
                "content": "Customer inquiry about upgrading from Basic to Pro plan. Customer mentioned they need advanced analytics features.",
                "id": "zendesk_ticket_789",
                "metadata": {
                  "date": "2024-01-14T14:22:00Z",
                  "priority": "medium",
                  "status": "resolved",
                  "type": "support_ticket"
                },
                "score": 0.87,
                "source": "zendesk",
                "title": "Billing Question - Subscription Upgrade"
              }
            ],
            "status": "success"
          }
        ]
      },
      "SearchStatus": {
        "type": "string",
        "enum": [
          "success",
          "no_relevant_results",
          "no_results"
        ],
        "title": "SearchStatus",
        "description": "Status indicators for search operation outcomes."
      },
      "Source": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable name of the data source connector (e.g., 'GitHub', 'Stripe', 'PostgreSQL')."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description explaining what data this source can extract and its typical use cases."
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of authentication mechanism required by this source (e.g., 'oauth2')."
          },
          "auth_config_class": {
            "type": "string",
            "title": "Auth Config Class",
            "description": "Python class name that defines the authentication configuration fields required for this source."
          },
          "config_class": {
            "type": "string",
            "title": "Config Class",
            "description": "Python class name that defines the source-specific configuration options and parameters."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier used internally to reference this source type. Must be unique across all sources."
          },
          "class_name": {
            "type": "string",
            "title": "Class Name",
            "description": "Python class name of the source implementation that handles data extraction logic."
          },
          "output_entity_definition_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Entity Definition Ids",
            "description": "List of entity definition IDs that this source can produce. Defines the data schema and structure that this connector outputs."
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id",
            "description": "Organization identifier for custom source connectors. System sources have this set to null."
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Categorization tags to help users discover and filter sources by domain or use case."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for this source type. Generated automatically when the source is registered."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when this source type was registered in the system (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when this source type was last updated (ISO 8601 format)."
          },
          "auth_fields": {
            "$ref": "#/components/schemas/Fields",
            "description": "Schema definition for authentication fields required to connect to this source. Describes field types, validation rules, and user interface hints."
          },
          "config_fields": {
            "$ref": "#/components/schemas/Fields",
            "description": "Schema definition for configuration fields required to customize this source. Describes field types, validation rules, and user interface hints."
          }
        },
        "type": "object",
        "required": [
          "name",
          "auth_config_class",
          "config_class",
          "short_name",
          "class_name",
          "id",
          "created_at",
          "modified_at",
          "auth_fields",
          "config_fields"
        ],
        "title": "Source",
        "description": "Complete source representation with authentication and configuration schemas.",
        "examples": [
          {
            "auth_config_class": "GitHubAuthConfig",
            "auth_fields": {
              "fields": [
                {
                  "description": "Personal Access Token with repository read permissions. Generate one at https://github.com/settings/tokens",
                  "name": "personal_access_token",
                  "secret": true,
                  "title": "Personal Access Token",
                  "type": "string"
                },
                {
                  "description": "Full repository name in format 'owner/repo' (e.g., 'airweave-ai/airweave')",
                  "name": "repo_name",
                  "title": "Repository Name",
                  "type": "string"
                }
              ]
            },
            "auth_type": "config_class",
            "class_name": "GitHubSource",
            "config_class": "GitHubConfig",
            "config_fields": {
              "fields": [
                {
                  "description": "Specific branch to sync (e.g., 'main', 'development'). If empty, uses the default branch.",
                  "name": "branch",
                  "title": "Branch name",
                  "type": "string"
                }
              ]
            },
            "created_at": "2024-01-01T00:00:00Z",
            "description": "Connect to GitHub repositories for code, issues, pull requests, and documentation",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "labels": [
              "code"
            ],
            "modified_at": "2024-01-01T00:00:00Z",
            "name": "GitHub",
            "output_entity_definition_ids": [
              "def12345-6789-abcd-ef01-234567890abc",
              "def67890-abcd-ef01-2345-67890abcdef1"
            ],
            "short_name": "github"
          }
        ]
      },
      "SourceConnection": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable display name for the source connection. This helps you identify the connection in the UI and should clearly describe what data it connects to (e.g., 'Production Stripe Account', 'Customer Support Database')."
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional additional context about the data this connection provides. Use this to document the purpose, data types, or any special considerations for this connection."
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source-specific configuration options that control data retrieval behavior. These vary by source type and control how data is retrieved (e.g., database queries, API filters, file paths). Check the documentation of a specific source (for example [Github](https://docs.airweave.ai/docs/connectors/github)) to see what is required.",
            "examples": []
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the source type (e.g., 'github', 'stripe', 'postgresql', 'slack'). This determines which connector Airweave uses to sync data.",
            "examples": [
              "stripe",
              "postgresql",
              "slack"
            ]
          },
          "white_label_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "White Label Id",
            "description": "Identifier for custom OAuth integrations. Only present for connections created through white label OAuth flows."
          },
          "auth_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Provider",
            "description": "Readable ID of the auth provider used to create this connection. Present only if the connection was created through an auth provider."
          },
          "auth_provider_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Provider Config",
            "description": "Configuration used with the auth provider to create this connection. Present only if the connection was created through an auth provider."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for this source connection. This UUID is generated automatically and used for API operations."
          },
          "sync_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Id",
            "description": "Internal identifier for the sync configuration associated with this source connection. Managed automatically by the system."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id",
            "description": "Identifier of the organization that owns this source connection. Source connections are isolated per organization."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the source connection was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the source connection was last modified (ISO 8601 format)."
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id",
            "description": "Internal identifier for the underlying connection object that manages authentication and configuration."
          },
          "collection": {
            "type": "string",
            "title": "Collection",
            "description": "Readable ID of the collection where this source connection syncs its data. This creates the link between your data source and searchable content.",
            "examples": [
              "finance-data-ab123",
              "customer-support-xy789"
            ]
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email address of the user who created this source connection."
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email address of the user who last modified this source connection."
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Fields",
            "description": "Authentication credentials for the data source. Returns '********' by default for security."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SourceConnectionStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Current operational status of the source connection:<br/>\u2022 **active**: Connection is healthy and ready for data synchronization<br/>\u2022 **in_progress**: Currently syncing data from the source<br/>\u2022 **failing**: Recent sync attempts have failed and require attention"
          },
          "latest_sync_job_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncJobStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status of the most recent data synchronization job:<br/>\u2022 **completed**: Last sync finished successfully<br/>\u2022 **failed**: Last sync encountered errors<br/>\u2022 **in_progress**: Currently running a sync job<br/>\u2022 **pending**: Sync job is queued and waiting to start"
          },
          "latest_sync_job_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Sync Job Id",
            "description": "Unique identifier of the most recent sync job. Use this to track sync progress or retrieve detailed job information."
          },
          "latest_sync_job_started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Sync Job Started At",
            "description": "Timestamp when the most recent sync job started (ISO 8601 format)."
          },
          "latest_sync_job_completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Sync Job Completed At",
            "description": "Timestamp when the most recent sync job completed (ISO 8601 format). Null if the job is still running or failed."
          },
          "latest_sync_job_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Sync Job Error",
            "description": "Error message from the most recent sync job if it failed. Use this to diagnose and resolve sync issues."
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule",
            "description": "Cron expression defining when automatic data synchronization occurs. Null if automatic syncing is disabled and syncs must be triggered manually.",
            "examples": [
              "0 */6 * * *",
              "0 9,17 * * 1-5"
            ]
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run",
            "description": "Timestamp when the next automatic sync is scheduled to run (ISO 8601 format). Null if no automatic schedule is configured."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "id",
          "organization_id",
          "created_at",
          "modified_at",
          "collection"
        ],
        "title": "SourceConnection",
        "description": "Complete source connection representation returned by the API.",
        "examples": [
          {
            "auth_fields": {
              "personal_access_token": "********",
              "repo_name": "airweave-ai/docs"
            },
            "collection": "engineering-docs-ab123",
            "config_fields": {
              "branch": "main"
            },
            "connection_id": "conn9876-5432-10fe-dcba-098765432100",
            "created_at": "2024-01-15T09:30:00Z",
            "created_by_email": "engineering@company.com",
            "cron_schedule": "0 */6 * * *",
            "description": "Sync technical documentation and code from our engineering repos",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "latest_sync_job_completed_at": "2024-01-15T14:05:22Z",
            "latest_sync_job_id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
            "latest_sync_job_started_at": "2024-01-15T14:00:00Z",
            "latest_sync_job_status": "completed",
            "modified_at": "2024-01-15T14:22:15Z",
            "modified_by_email": "engineering@company.com",
            "name": "GitHub - Engineering Documentation",
            "next_scheduled_run": "2024-01-16T02:00:00Z",
            "organization_id": "org12345-6789-abcd-ef01-234567890abc",
            "short_name": "github",
            "status": "active",
            "sync_id": "123e4567-e89b-12d3-a456-426614174000"
          }
        ]
      },
      "SourceConnectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 42,
            "minLength": 4,
            "title": "Name",
            "description": "Human-readable name for the source connection. This helps you identify the connection in the UI and should clearly describe what data it connects to.",
            "examples": [
              "Production Stripe Account",
              "Main PostgreSQL DB",
              "Support Tickets API"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this source connection provides. Use this to document the purpose, data types, or any special considerations for this connection.",
            "examples": [
              "Production Stripe account for payment and subscription data",
              "Customer support tickets from Zendesk"
            ]
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source-specific configuration parameters required for data extraction. These vary by source type and control how data is retrieved (e.g., database queries, API filters, file paths). Check the documentation of a specific source (for example [Github](https://docs.airweave.ai/docs/connectors/github)) to see what is required."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the source type that determines which connector to use for data synchronization.",
            "examples": [
              "stripe",
              "postgresql",
              "slack",
              "notion"
            ]
          },
          "collection": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection",
            "description": "Readable ID of the collection where synced data will be stored. If not provided, a new collection will be automatically created."
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule",
            "description": "Cron expression for automatic data synchronization schedule. If not provided, data will only sync when manually triggered. Use standard cron format: minute hour day month weekday."
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Authentication credentials required to access the data source. The required fields vary by source type. Check the documentation of a specific source (for example [Github](https://docs.airweave.ai/docs/connectors/github)) to see what is required."
          },
          "auth_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Provider",
            "description": "Unique readable ID of a connected auth provider to use for authentication instead of providing auth_fields directly. When specified, credentials for the source will be obtained and refreshed automatically by Airweave interaction with the auth provider. To see which auth providers are supported and learn more about how to use them, check [this page](https://docs.airweave.ai/docs/auth-providers).",
            "examples": [
              "composio"
            ]
          },
          "auth_provider_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for the auth provider when using auth_provider field. Required fields vary by auth provider. For Composio, use integration_id and  account_id to specify which integration and account from Composio you want to use to connect to the source."
          },
          "sync_immediately": {
            "type": "boolean",
            "title": "Sync Immediately",
            "description": "Whether to start an initial data synchronization immediately after creating the connection.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name"
        ],
        "title": "SourceConnectionCreate",
        "description": "Schema for creating a source connection through the public API.",
        "examples": [
          {
            "auth_fields": {
              "personal_access_token": "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
              "repo_name": "airweave-ai/airweave"
            },
            "collection": "engineering-docs",
            "config_fields": {
              "branch": "main"
            },
            "cron_schedule": "0 */6 * * *",
            "description": "Sync code and documentation from our main repository",
            "name": "GitHub - Airweave Repository",
            "short_name": "github",
            "sync_immediately": true
          }
        ]
      },
      "SourceConnectionCreateWithCredential": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 42,
            "minLength": 4,
            "title": "Name",
            "description": "Human-readable name for the source connection. This helps you identify the connection in the UI and should clearly describe what data it connects to.",
            "examples": [
              "Production Stripe Account",
              "Main PostgreSQL DB",
              "Support Tickets API"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this source connection provides. Use this to document the purpose, data types, or any special considerations for this connection.",
            "examples": [
              "Production Stripe account for payment and subscription data",
              "Customer support tickets from Zendesk"
            ]
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source-specific configuration parameters required for data extraction. These vary by source type and control how data is retrieved (e.g., database queries, API filters, file paths). Check the documentation of a specific source (for example [Github](https://docs.airweave.ai/docs/connectors/github)) to see what is required."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the source type that determines which connector to use for data synchronization.",
            "examples": [
              "stripe",
              "postgresql",
              "slack",
              "notion"
            ]
          },
          "collection": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection",
            "description": "Readable ID of the collection where synced data will be stored."
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule",
            "description": "Cron expression for automatic data synchronization schedule."
          },
          "credential_id": {
            "type": "string",
            "format": "uuid",
            "title": "Credential Id",
            "description": "ID of the existing integration credential to use for authentication. This credential must already exist and be associated with the same source type."
          },
          "sync_immediately": {
            "type": "boolean",
            "title": "Sync Immediately",
            "description": "Whether to start an initial data synchronization immediately after creating the connection.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "credential_id"
        ],
        "title": "SourceConnectionCreateWithCredential",
        "description": "Schema for creating a source connection with pre-existing credentials (internal use).",
        "examples": [
          {
            "collection": "finance-data",
            "config_fields": {
              "webhook_url": "https://my-app.com/webhooks"
            },
            "credential_id": "123e4567-e89b-12d3-a456-426614174000",
            "cron_schedule": "0 0,6,12,18 * * *",
            "description": "Stripe connection created through OAuth flow",
            "name": "OAuth Stripe Connection",
            "short_name": "stripe",
            "sync_immediately": true
          }
        ]
      },
      "SourceConnectionCreateWithWhiteLabel": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 42,
            "minLength": 4,
            "title": "Name",
            "description": "Human-readable name for the source connection. This helps you identify the connection in the UI and should clearly describe what data it connects to.",
            "examples": [
              "Production Stripe Account",
              "Main PostgreSQL DB",
              "Support Tickets API"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this source connection provides. Use this to document the purpose, data types, or any special considerations for this connection.",
            "examples": [
              "Production Stripe account for payment and subscription data",
              "Customer support tickets from Zendesk"
            ]
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source-specific configuration parameters required for data extraction. These vary by source type and control how data is retrieved (e.g., database queries, API filters, file paths). Check the documentation of a specific source (for example [Github](https://docs.airweave.ai/docs/connectors/github)) to see what is required."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the source type that determines which connector to use for data synchronization.",
            "examples": [
              "stripe",
              "postgresql",
              "slack",
              "notion"
            ]
          },
          "collection": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection",
            "description": "Readable ID of the collection where synced data will be stored. If not provided, a new collection will be automatically created.",
            "examples": [
              "finance-data-ab123",
              "customer-support-xy789"
            ]
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule",
            "description": "Cron expression for automatic data synchronization schedule. Uses standard cron format: minute hour day month weekday.",
            "examples": [
              "0 */6 * * *",
              "0 9 * * 1-5"
            ]
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Authentication credentials for the data source. For white label OAuth flows, these are typically obtained automatically during the OAuth consent process."
          },
          "credential_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credential Id",
            "description": "ID of an existing integration credential to use instead of creating a new one. Useful when credentials have already been established through OAuth flows."
          },
          "sync_immediately": {
            "type": "boolean",
            "title": "Sync Immediately",
            "description": "Whether to start an initial data synchronization immediately after creating the connection.",
            "default": true
          },
          "white_label_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "White Label Id",
            "description": "ID of the white label integration configuration. This is automatically set by the white label OAuth endpoint and links the connection to your custom OAuth application."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name"
        ],
        "title": "SourceConnectionCreateWithWhiteLabel",
        "description": "Schema for creating a source connection through white label OAuth integrations.",
        "examples": [
          {
            "collection": "team-communications",
            "cron_schedule": "0 */2 * * *",
            "description": "Main Slack workspace for team communications",
            "name": "Company Slack Workspace",
            "short_name": "slack",
            "sync_immediately": true,
            "white_label_id": "123e4567-e89b-12d3-a456-426614174000"
          }
        ]
      },
      "SourceConnectionJob": {
        "properties": {
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id",
            "description": "Unique identifier of the source connection for which this data refresh is running."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for this specific data refresh operation."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id",
            "description": "Identifier of the organization that owns this data refresh operation."
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email address of the user who initiated this data refresh (for manually triggered operations)."
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email address of the user who last modified this data refresh operation."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Timestamp when this data refresh was created and queued (ISO 8601 format)."
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At",
            "description": "Timestamp when this data refresh was last modified (ISO 8601 format)."
          },
          "status": {
            "$ref": "#/components/schemas/SyncJobStatus",
            "description": "Current execution status of the data refresh:<br/>\u2022 **created**: Operation has been created but not yet queued<br/>\u2022 **pending**: Operation is queued and waiting to start<br/>\u2022 **in_progress**: Currently running and processing data<br/>\u2022 **completed**: Finished successfully with all data processed<br/>\u2022 **failed**: Encountered errors and could not complete<br/>\u2022 **cancelled**: Manually cancelled before completion",
            "default": "pending"
          },
          "entities_inserted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Inserted",
            "description": "Number of new data entities that were added to the collection during this refresh.",
            "default": 0
          },
          "entities_updated": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Updated",
            "description": "Number of existing entities that were modified and updated during this refresh.",
            "default": 0
          },
          "entities_deleted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Deleted",
            "description": "Number of entities that were removed from the collection because they no longer exist in the source.",
            "default": 0
          },
          "entities_kept": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Kept",
            "description": "Number of entities that were checked but required no changes because they were already up-to-date.",
            "default": 0
          },
          "entities_skipped": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Skipped",
            "description": "Number of entities that were intentionally skipped due to filtering rules or processing decisions.",
            "default": 0
          },
          "entities_encountered": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Encountered",
            "description": "Detailed breakdown of entities processed by type or category.",
            "default": {}
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "Timestamp when the data refresh began active processing (ISO 8601 format)."
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Timestamp when the data refresh finished successfully (ISO 8601 format)."
          },
          "failed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed At",
            "description": "Timestamp when the data refresh failed (ISO 8601 format)."
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Detailed error message if the data refresh failed."
          }
        },
        "type": "object",
        "required": [
          "source_connection_id",
          "id",
          "organization_id"
        ],
        "title": "SourceConnectionJob",
        "description": "Data synchronization job for a specific source connection."
      },
      "SourceConnectionListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the source connection."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable name of the source connection."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Brief description of what data this connection provides."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the source type (e.g., 'stripe', 'postgresql')."
          },
          "status": {
            "$ref": "#/components/schemas/SourceConnectionStatus",
            "description": "Current operational status: active, in_progress, or failing."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "When the source connection was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "When the source connection was last modified (ISO 8601 format)."
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id",
            "description": "Internal identifier for the sync configuration."
          },
          "collection": {
            "type": "string",
            "title": "Collection",
            "description": "Readable ID of the collection where this connection syncs data.",
            "examples": [
              "finance-data-ab123",
              "customer-support-xy789"
            ]
          },
          "white_label_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "White Label Id",
            "description": "Identifier for custom OAuth integrations, if applicable."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "short_name",
          "status",
          "created_at",
          "modified_at",
          "sync_id",
          "collection"
        ],
        "title": "SourceConnectionListItem",
        "description": "Simplified source connection representation for list operations.",
        "examples": [
          {
            "collection": "engineering-docs-ab123",
            "created_at": "2024-01-15T09:30:00Z",
            "description": "Sync technical documentation and code from our engineering repos",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "modified_at": "2024-01-15T14:22:15Z",
            "name": "GitHub - Engineering Documentation",
            "short_name": "github",
            "status": "active",
            "sync_id": "123e4567-e89b-12d3-a456-426614174000"
          }
        ]
      },
      "SourceConnectionStatus": {
        "type": "string",
        "enum": [
          "active",
          "in_progress",
          "failing"
        ],
        "title": "SourceConnectionStatus",
        "description": "Source connection status enum."
      },
      "SourceConnectionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 42,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Updated name for the source connection. Must be between 4 and 42 characters.",
            "examples": [
              "Updated Stripe Connection",
              "Main DB - Updated"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Updated description of what this source connection provides.",
            "examples": [
              "Updated: Now includes subscription events and customer data"
            ]
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Fields",
            "description": "Updated authentication credentials for the data source. Provide new credentials to refresh or update authentication."
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source-specific configuration parameters required for data extraction. These vary by source type and control how data is retrieved (e.g., database queries, API filters, file paths). Check the documentation of a specific source (for example [Github](https://docs.airweave.ai/docs/connectors/github)) to see what is required."
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule",
            "description": "Updated cron expression for automatic synchronization schedule. Set to null to disable automatic syncing.",
            "examples": [
              "0 */4 * * *",
              "0 9,17 * * 1-5"
            ]
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id",
            "description": "Internal connection identifier. This is typically managed automatically and should not be modified manually."
          },
          "white_label_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "White Label Id",
            "description": "ID of the white label integration. Used for custom OAuth integrations with your own branding."
          },
          "auth_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Provider",
            "description": "Updated auth provider readable ID. Only relevant if the connection uses an auth provider."
          },
          "auth_provider_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Provider Config",
            "description": "Updated configuration for the auth provider. Only relevant if the connection uses an auth provider."
          }
        },
        "type": "object",
        "title": "SourceConnectionUpdate",
        "description": "Schema for updating an existing source connection.",
        "examples": [
          {
            "auth_fields": {
              "personal_access_token": "ghp_yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy",
              "repo_name": "airweave-ai/engineering-docs"
            },
            "config_fields": {
              "branch": "develop"
            },
            "cron_schedule": "0 */4 * * *",
            "description": "Updated: Now includes API documentation and code examples from multiple repositories",
            "name": "GitHub - Updated Engineering Documentation"
          }
        ]
      },
      "Sync": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "embedding_model_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Embedding Model Connection Id",
            "default": "33333333-3333-3333-3333-333333333333"
          },
          "destination_connection_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Destination Connection Ids"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_connection_id",
          "destination_connection_ids",
          "status",
          "id",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "Sync",
        "description": "Schema for Sync."
      },
      "SyncCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "embedding_model_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Embedding Model Connection Id",
            "default": "33333333-3333-3333-3333-333333333333"
          },
          "destination_connection_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Destination Connection Ids"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "active"
          },
          "run_immediately": {
            "type": "boolean",
            "title": "Run Immediately",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_connection_id",
          "destination_connection_ids"
        ],
        "title": "SyncCreate",
        "description": "Schema for creating a Sync object."
      },
      "SyncDag": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/DagNode"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/DagEdge"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id",
          "id",
          "organization_id",
          "nodes",
          "edges"
        ],
        "title": "SyncDag",
        "description": "Schema for a sync DAG definition.\n\nThe DAG structure as the UI displays it.\n\nThis means that for each entity, there is a node that is the producer and a node that is the\nconsumer. These are connected by an edge: producer -edge-> entity -edge-> consumer\n\nSources, transformers, and destinations are also nodes, but they do not have an\nentity_definition_id.\n\nSources are producers by default, and destinations are consumers by default.\nTransformers are both producers and consumers."
      },
      "SyncDagCreate-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/DagNodeCreate"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/DagEdgeCreate"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id",
          "nodes",
          "edges"
        ],
        "title": "SyncDagCreate",
        "description": "Schema for creating a sync DAG definition."
      },
      "SyncDagCreate-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/DagNodeCreate"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/DagEdgeCreate"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id",
          "nodes",
          "edges"
        ],
        "title": "SyncDagCreate",
        "description": "Schema for creating a sync DAG definition."
      },
      "SyncDagUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DagNodeCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes"
          },
          "edges": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DagEdgeCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id"
        ],
        "title": "SyncDagUpdate",
        "description": "Schema for updating a sync DAG definition."
      },
      "SyncJob": {
        "properties": {
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "status": {
            "$ref": "#/components/schemas/SyncJobStatus",
            "default": "pending"
          },
          "entities_inserted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Inserted",
            "default": 0
          },
          "entities_updated": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Updated",
            "default": 0
          },
          "entities_deleted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Deleted",
            "default": 0
          },
          "entities_kept": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Kept",
            "default": 0
          },
          "entities_skipped": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Skipped",
            "default": 0
          },
          "entities_encountered": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Encountered",
            "default": {}
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "failed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed At"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "sync_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Name",
            "description": "Name of the sync, populated from join query"
          }
        },
        "type": "object",
        "required": [
          "sync_id",
          "id",
          "organization_id"
        ],
        "title": "SyncJob",
        "description": "Schema for SyncJob."
      },
      "SyncJobStatus": {
        "type": "string",
        "enum": [
          "created",
          "pending",
          "in_progress",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "SyncJobStatus",
        "description": "Sync job status enum."
      },
      "SyncStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "error"
        ],
        "title": "SyncStatus",
        "description": "Sync status enum."
      },
      "SyncUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SyncUpdate",
        "description": "Schema for updating a Sync object."
      },
      "SyncWithSourceConnection": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "embedding_model_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Embedding Model Connection Id",
            "default": "33333333-3333-3333-3333-333333333333"
          },
          "destination_connection_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Destination Connection Ids"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "source_connection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Connection"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_connection_id",
          "destination_connection_ids",
          "status",
          "id",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "SyncWithSourceConnection",
        "description": "Schema for Sync with source connection."
      },
      "Transformer": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "method_name": {
            "type": "string",
            "title": "Method Name"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "input_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Entity Definition Ids"
          },
          "output_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Entity Definition Ids"
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "type": "string",
            "title": "Created By Email"
          },
          "modified_by_email": {
            "type": "string",
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "method_name",
          "module_name",
          "input_entity_definition_ids",
          "output_entity_definition_ids",
          "id",
          "organization_id",
          "created_by_email",
          "modified_by_email"
        ],
        "title": "Transformer",
        "description": "Schema for a transformer."
      },
      "TransformerCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "method_name": {
            "type": "string",
            "title": "Method Name"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "input_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Entity Definition Ids"
          },
          "output_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Entity Definition Ids"
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema"
          }
        },
        "type": "object",
        "required": [
          "name",
          "method_name",
          "module_name",
          "input_entity_definition_ids",
          "output_entity_definition_ids"
        ],
        "title": "TransformerCreate",
        "description": "Schema for creating a transformer."
      },
      "TransformerUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "method_name": {
            "type": "string",
            "title": "Method Name"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "input_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Entity Definition Ids"
          },
          "output_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Entity Definition Ids"
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema"
          }
        },
        "type": "object",
        "required": [
          "name",
          "method_name",
          "module_name",
          "input_entity_definition_ids",
          "output_entity_definition_ids"
        ],
        "title": "TransformerUpdate",
        "description": "Schema for updating a transformer."
      },
      "User": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "default": "Superuser"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          },
          "primary_organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Organization Id"
          },
          "user_organizations": {
            "items": {
              "$ref": "#/components/schemas/UserOrganization"
            },
            "type": "array",
            "title": "User Organizations"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id"
        ],
        "title": "User",
        "description": "Schema for User."
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "default": "Superuser"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserCreate",
        "description": "Schema for creating a User object."
      },
      "UserOrganization": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "default": "member"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "organization_id",
          "organization"
        ],
        "title": "UserOrganization",
        "description": "Schema for UserOrganization relationship with full organization details."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValuesCount": {
        "properties": {
          "lt": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt",
            "description": "point.key.length() &lt; values_count.lt"
          },
          "gt": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt",
            "description": "point.key.length() &gt; values_count.gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte",
            "description": "point.key.length() &gt;= values_count.gte"
          },
          "lte": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte",
            "description": "point.key.length() &lt;= values_count.lte"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ValuesCount",
        "description": "Values count filter request"
      },
      "WhiteLabel": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable name for the white label integration. This helps you identify the integration in the UI and should clearly describe its purpose (e.g., 'Customer Portal Slack Integration', 'Enterprise Google Drive Access').",
            "examples": [
              "Customer Portal Slack Integration",
              "Enterprise Google Drive Access",
              "Support Team GitHub Integration"
            ]
          },
          "source_short_name": {
            "type": "string",
            "title": "Source Short Name",
            "description": "Technical identifier of the source type that this integration supports (e.g., 'slack', 'google_drive', 'github'). This determines which service provider the OAuth integration connects to.",
            "examples": [
              "slack",
              "google_drive",
              "github"
            ]
          },
          "redirect_url": {
            "type": "string",
            "title": "Redirect Url",
            "description": "OAuth2 callback URL where users are redirected after completing authentication. This must be a valid HTTPS URL that your application can handle to receive the authorization code.",
            "examples": [
              "https://yourapp.com/auth/callback",
              "https://api.company.com/oauth/complete"
            ]
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "OAuth2 client identifier provided by the service provider. This identifies your application during the OAuth consent flow and must match the client ID configured in the service provider's developer console.",
            "examples": [
              "1234567890.1234567890987",
              "GOCSPX-abcdef1234567890"
            ]
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "OAuth2 client secret from your registered application. This is used to securely authenticate your application when exchanging authorization codes for access tokens. Keep this value secure and never expose it in client-side code.",
            "examples": [
              "abcdefghijklmnopqrstuvwxyz123456",
              "GOCSPX-your-oauth-secret-here",
              "1234567890abcdef1234567890abcdef12345678"
            ]
          },
          "allowed_origins": {
            "type": "string",
            "title": "Allowed Origins",
            "description": "Comma-separated list of allowed domains for OAuth flows and CORS. This prevents unauthorized websites from using your OAuth credentials and should include all domains where your application is hosted.",
            "examples": [
              "https://yourapp.com,https://api.yourapp.com",
              "https://company.com"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for the white label integration. This UUID is generated automatically and used for API operations and OAuth flow tracking."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id",
            "description": "Identifier of the organization that owns this white label integration. White label integrations are isolated per organization for security and multi-tenancy."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the white label integration was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the white label integration was last modified (ISO 8601 format)."
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email address of the user who created this white label integration."
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email address of the user who last modified this white label integration."
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_short_name",
          "redirect_url",
          "client_id",
          "client_secret",
          "allowed_origins",
          "id",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "WhiteLabel",
        "description": "Complete white label integration representation returned by the API.",
        "examples": [
          {
            "allowed_origins": "https://yourapp.com,https://app.yourapp.com",
            "client_id": "1234567890.1234567890123",
            "client_secret": "abcdefghijklmnopqrstuvwxyz123456",
            "created_at": "2024-01-10T08:15:00Z",
            "created_by_email": "admin@company.com",
            "id": "white123-4567-89ab-cdef-012345678901",
            "modified_at": "2024-01-15T09:30:00Z",
            "modified_by_email": "devops@company.com",
            "name": "Customer Portal Slack Integration",
            "organization_id": "org12345-6789-abcd-ef01-234567890abc",
            "redirect_url": "https://yourapp.com/auth/slack/callback",
            "source_short_name": "slack"
          }
        ]
      },
      "WhiteLabelCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable name for the white label integration. This helps you identify the integration in the UI and should clearly describe its purpose (e.g., 'Customer Portal Slack Integration', 'Enterprise Google Drive Access').",
            "examples": [
              "Customer Portal Slack Integration",
              "Enterprise Google Drive Access",
              "Support Team GitHub Integration"
            ]
          },
          "source_short_name": {
            "type": "string",
            "title": "Source Short Name",
            "description": "Technical identifier of the source type that this integration supports (e.g., 'slack', 'google_drive', 'github'). This determines which service provider the OAuth integration connects to.",
            "examples": [
              "slack",
              "google_drive",
              "github"
            ]
          },
          "redirect_url": {
            "type": "string",
            "title": "Redirect Url",
            "description": "OAuth2 callback URL where users are redirected after completing authentication. This must be a valid HTTPS URL that your application can handle to receive the authorization code.",
            "examples": [
              "https://yourapp.com/auth/callback",
              "https://api.company.com/oauth/complete"
            ]
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "OAuth2 client identifier provided by the service provider. This identifies your application during the OAuth consent flow and must match the client ID configured in the service provider's developer console.",
            "examples": [
              "1234567890.1234567890987",
              "GOCSPX-abcdef1234567890"
            ]
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "OAuth2 client secret from your registered application. This is used to securely authenticate your application when exchanging authorization codes for access tokens. Keep this value secure and never expose it in client-side code.",
            "examples": [
              "abcdefghijklmnopqrstuvwxyz123456",
              "GOCSPX-your-oauth-secret-here",
              "1234567890abcdef1234567890abcdef12345678"
            ]
          },
          "allowed_origins": {
            "type": "string",
            "title": "Allowed Origins",
            "description": "Comma-separated list of allowed domains for OAuth flows and CORS. This prevents unauthorized websites from using your OAuth credentials and should include all domains where your application is hosted.",
            "examples": [
              "https://yourapp.com,https://api.yourapp.com",
              "https://company.com"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_short_name",
          "redirect_url",
          "client_id",
          "client_secret",
          "allowed_origins"
        ],
        "title": "WhiteLabelCreate",
        "description": "Schema for creating a WhiteLabel object.",
        "examples": [
          {
            "allowed_origins": "https://yourapp.com,https://app.yourapp.com",
            "client_id": "1234567890.1234567890123",
            "client_secret": "abcdefghijklmnopqrstuvwxyz123456",
            "name": "Customer Portal Slack Integration",
            "redirect_url": "https://yourapp.com/auth/slack/callback",
            "source_short_name": "slack"
          }
        ]
      },
      "WhiteLabelUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Updated name for the white label integration.",
            "examples": [
              "Updated Customer Portal Integration",
              "Revised Enterprise Access"
            ]
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url",
            "description": "Updated OAuth callback URL. Must be a valid HTTPS URL that matches your OAuth application configuration.",
            "examples": [
              "https://newdomain.com/auth/callback",
              "https://v2.yourapp.com/oauth/complete"
            ]
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id",
            "description": "Updated OAuth2 client ID. Must match the client ID in your service provider's developer console.",
            "examples": [
              "9876543210.9876543210987",
              "updated-client-id-here"
            ]
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret",
            "description": "Updated OAuth2 client secret. This will replace the existing secret and affect all future OAuth flows.",
            "examples": [
              "new-secret-key-abcdef123456",
              "GOCSPX-updated-oauth-secret"
            ]
          },
          "allowed_origins": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Origins",
            "description": "Updated comma-separated list of allowed domains for OAuth flows.",
            "examples": [
              "https://newapp.com,https://api.newapp.com",
              "https://updated-domain.com"
            ]
          }
        },
        "type": "object",
        "title": "WhiteLabelUpdate",
        "description": "Schema for updating a WhiteLabel object.",
        "examples": [
          {
            "allowed_origins": "https://v2.yourapp.com,https://api.yourapp.com",
            "name": "Updated Customer Portal Integration",
            "redirect_url": "https://v2.yourapp.com/auth/slack/callback"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "collections",
      "x-display-name": "Collections",
      "description": "API endpoints for managing collections - logical groups of data sources that provide unified search capabilities"
    },
    {
      "name": "source-connections",
      "x-display-name": "Source Connections",
      "description": "API endpoints for managing live connections to data sources. Source connections are the actual configured instances that Airweave uses to sync data from your apps and databases, transforming it into searchable, structured information within collections"
    },
    {
      "name": "sources",
      "x-display-name": "Sources",
      "description": "API endpoints for discovering available data source connectors and their configuration requirements"
    },
    {
      "name": "white-labels",
      "x-display-name": "White Labels",
      "description": "API endpoints for managing custom OAuth2 integrations with your own branding and credentials"
    }
  ],
  "servers": [
    {
      "url": "https://api.airweave.ai",
      "description": "Production",
      "x-fern-server-name": "Production"
    },
    {
      "url": "http://localhost:8001",
      "description": "Local",
      "x-fern-server-name": "Local"
    }
  ]
}